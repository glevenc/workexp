# Created: Ma Jun 05/04/2012

#* Behaviour
set-option -g display-time 3000
set-option -g history-limit 600000

#* Key bindings
set-option -g prefix F12        # if not work, check if TERM=xterm
bind-key -n F11 send-prefix     # F11 becomes 'prefix' of nested tmux sessions
bind-key C-b send-prefix        # F11 C-b ... becomes 'prefix' of nested nested ... sessions
bind-key | split-window -h      # default is "
bind-key _ split-window -v      # default is %
bind-key Tab select-pane -t:.+  # easier to key-chord than F12+<arrow>
bind-key BTab select-pane -t:.-
set-option -g status-keys emacs
set-window-option -g mode-keys emacs
bind-key C-s setw synchronize-panes
bind-key b set-option status

# Conflicts with my emacs settings.
# bind-key -nr C-Up select-pane -U
# bind-key -nr C-Down select-pane -D
# bind-key -nr C-Left select-pane -L
# bind-key -nr C-Right select-pane -R

#* Status bar format
set-option -g base-index 1      # window index starts from 1 instead of 0
set-option -g status on
set-window-option -g automatic-rename on
set-window-option -g monitor-activity on
# set-option -g status-utf8 on
set-option -g status-left-length 30
set-option -g status-justify left

#* Terminal type
## NOTE: Comment out this if you don't know what it is
set-option -g default-terminal "xterm-256color"
# set-option -g default-terminal "screen-256color"
# or start tmux with "tmux -2" to force 256
## "if-shell" runs asynchronously, so it does not help

#* color themes # one scheme per file and "source xxx.scheme"?
# #** colour-theme-concise
# set-option -g status-left "[tmux:#S@#h]"
# set-option -g status-right "[#T]"
# set-option -g status-attr none
# set-option -g status-bg colour236
# set-option -g status-fg white
# set-window-option -g window-status-attr none
# set-window-option -g window-status-fg white
# set-window-option -g window-status-current-attr none
# set-window-option -g window-status-current-fg red
# set-window-option -g window-status-activity-attr none
# set-window-option -g window-status-activity-fg yellow
# set-option -g pane-border-fg white
# set-option -g pane-active-border-fg white
#** colour-theme-blocks
set-option -g status-left "#[bg=cyan,fg=black][tmux:#S@#h]"
set-option -g status-right "[#T]"
set-option -g status-attr none
set-option -g status-bg colour236
set-option -g status-fg white
set-window-option -g window-status-attr reverse
set-window-option -g window-status-fg green
set-window-option -g window-status-current-attr reverse
set-window-option -g window-status-current-fg red
# set-window-option -g window-status-alert-attr reverse
# set-window-option -g window-status-alert-fg yellow
set-option -g pane-border-fg green
set-option -g pane-active-border-fg red

#* Terminal emulator window title
set -g set-titles on
set -g set-titles-string 'tmux:#S@#h'

#* My functions
bind-key m command-prompt -p "move (swap) current pane with: " "swap-pane -s %1"
bind-key j command-prompt "join-pane -s '%1'"
bind-key C command-prompt "new-window '%1'"
bind-key S command-prompt "new-session -s '%1'"
bind-key C-h command-prompt -p "save log to:" "copy-mode; send-keys 'M->' C-e C-space 'M-<' C-a C-w; save-buffer %%"
#bind-key C-h pipe-pane -o "cat >>$HOME/#S-#I-#P.log" \; display-message "toggle logging to $HOME/#S-#I-#P.log"
bind-key h pipe-pane "cat >>$HOME/#S-#I-#P.log" \; display-message "Start logging to $HOME/#S-#I-#P.log"
bind-key H pipe-pane \; display-message "Stop logging to $HOME/#S-#I-#P.log"

#* Mouse support
set-option -g mouse-select-pane on
# mouse-resize-pane rarely used and have a annoying bug
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on

# ****** Reference ******
# ***********************

#* Hotkeys
# ?: to list all keys, ESC to quit
# l: last-window
# n/p: next/previous window
# x: confirm-before kill-pane
# =: list and choose buffer
# w: list and choose window
# s: list and choose sessoin

#* Putty settings
# Terminal->Keyboard->'The Function keys and keypad': XtermR6
# Window->Translation->'Received data ... character set': UTF-8

#* Sharing with other users
## the idea is to grant others the r/w permission to your tmux socket so that
## they can 'tmux -S /path/to/yoursock attach'
#** Way 1 (Share all your current sessions):
## chmod -R o+rwx /tmp/tmux-your_uid
#** Way 2:
## tmux -S /tmp/share   # explicitly specify socket name
## chmod 777 /tmp/share # chmod so that others can access it
## tmux -S /tmp/share attach # other now can connect

#* Usage of Screen in case tmux is not available
# screen -S foo # new session foo
# screen -x foo # attach to session foo
# screen -ls    # list all sessions
# C-a C-c       # create a new window
# C-a "         # list and switch window
# C-a C-d       # detach
