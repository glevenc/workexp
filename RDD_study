弹性分布式数据集(RDD)

RDD是Spark最核心的东西，它表示已被分区，不可变的并能够被并行操作的数据集合,不同的数据集格式对应不同的RDD实现

你将RDD理解为一个大的集合，将所有数据都加载到内存中，方便进行多次重用。
第一，它是分布式的，可以分布在多台机器上，进行计算。
第二，它是弹性的，在计算处理过程中，机器的内存不够时，它会和硬盘进行数据交换，某种程度上会减低性能，但是可以确保计算得以继续进行

RDD编程接口：
一种是Transformation，一种是Action

Transformation返回值还是一个RDD。它使用了链式调用的设计模式，对一个RDD进行计算后，变换成另外一个RDD，然后这个RDD又可以进行另外一次转换。这个过程是分布式的
Action返回值不是一个RDD。它要么是一个Scala的普通集合，要么是一个值，要么是空，最终或返回到Driver程序，或把RDD写入到文件系统中Transformations转换操作，返回值还是一个 RDD，如 map、 filter、 union；Actions行动操作，返回结果或把RDD持久化起来，如 count、 collect、 save。
